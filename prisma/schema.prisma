generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  refreshToken String @unique @db.Text
  userId       String @unique

  user User @relation(fields: [userId], references: [id])

  @@index([refreshToken], type: Hash)
}

model User {
  id              String  @id @default(uuid())
  activationToken String? @unique
  resetToken      String? @unique
  refreshToken    Token?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String @unique
  password String

  spotifyOAUTH   String?
  spotifyRefresh String?
  yandexOAUTH    String?
  vkOAUTH        String?
  appleOAUTH     String?

  searchHistory Track[] @relation("userSearchHistory")

  playlists       Playlist[] @relation("userForCustomPlaylists")
  savedTracks     Playlist?  @relation("userForSavedTracks")
  favouriteTracks Playlist?  @relation("userForFavouriteTracks")
}

model Track {
  id                  String  @id @default(uuid())
  userIdSearchHistory String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title    String
  url      String
  urlId    String
  imgUrl   String?
  author   String?
  source   String
  duration String

  playlist          Playlist[]
  userSearchHistory User?      @relation("userSearchHistory", fields: [userIdSearchHistory], references: [id])
}

model Playlist {
  id   String @id @default(uuid())
  name String

  userIdCustomPlaylists String? @unique
  userIdSavedTracks     String? @unique
  userIdFavouriteTracks String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tracks                 Track[]
  userForCustomPlaylists User?   @relation(name: "userForCustomPlaylists", fields: [userIdCustomPlaylists], references: [id])
  userForSavedTracks     User?   @relation(name: "userForSavedTracks", fields: [userIdSavedTracks], references: [id])
  userForFavouriteTracks User?   @relation(name: "userForFavouriteTracks", fields: [userIdFavouriteTracks], references: [id])
}
